1.http2.0和http1.0区别
答案：多路复用技术，多个请求可同时在一个tcp连接上并行执行。
和长连接复用技术，所有的tcp链接都是请求一个，用完就关闭此次链接。

2.HTTPS与HTTP的一些区别
答案：HTTPS协议需要到证书颁发机构CA申请证书，HTTP不用申请证书；
HTTP是超文本传输协议，属于应用层信息传输，HTTPS 则是具有SSL加密传安全性传输协议，对数据的传输进行加密，相当于HTTP的升级版；
HTTP和HTTPS使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。
HTTP的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比HTTP协议安全。

3.HTTP有哪几种操作？
答案：HEAD请求在客户程序和服务器之间进行交流，而不会返回具体的文档。
当使用GET和POST方法时，服务器最后都将结果文档返回给客户程序，浏览器将 刷新显示。

4.Python 和 C++区别
答案：运行效率：C++ >> Python
首先，Python东西比C++多，经过了更多层，Python中甚至连数字都是object !!!
其次，Python是解释执行的，和物理机CPU之间多了解释器这层，而C++是编译执行的，直接就是机器码，编译的时候编译器又可以进行一些优化。
开发效率：Python >> C++
库的开发。

5.三次握手
答案：客户端发送SYN到服务端，并进入SYN_SENT状态，等待服务器确认
服务端收到SYN包后，为了确认客户的SYN，发送SYN+ACK包，此时服务器进入SYN_RECV状态
客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK，客户端和服务器进入ESTABLISHED。
https://blog.csdn.net/qq_38950316/article/details/81087809

6.四次握手
答案1）客户端进程发出连接释放报文，并且停止发送数据。释放数据报文首部，FIN=1，其序列号为seq=u（等于前面已经传送过来的数据的最后一个字节的序号加1），此时，客户端进入FIN-WAIT-1（终止等待1）状态。 TCP规定，FIN报文段即使不携带数据，也要消耗一个序号。
2）服务器收到连接释放报文，发出确认报文，ACK=1，ack=u+1，并且带上自己的序列号seq=v，此时，服务端就进入了CLOSE-WAIT（关闭等待）状态。TCP服务器通知高层的应用进程，客户端向服务器的方向就释放了，这时候处于半关闭状态，即客户端已经没有数据要发送了，但是服务器若发送数据，客户端依然要接受。这个状态还要持续一段时间，也就是整个CLOSE-WAIT状态持续的时间。
3）客户端收到服务器的确认请求后，此时，客户端就进入FIN-WAIT-2（终止等待2）状态，等待服务器发送连接释放报文（在这之前还需要接受服务器发送的最后的数据）。
4）服务器将最后的数据发送完毕后，就向客户端发送连接释放报文，FIN=1，ack=u+1，由于在半关闭状态，服务器很可能又发送了一些数据，假定此时的序列号为seq=w，此时，服务器就进入了LAST-ACK（最后确认）状态，等待客户端的确认。
5）客户端收到服务器的连接释放报文后，必须发出确认，ACK=1，ack=w+1，而自己的序列号是seq=u+1，此时，客户端就进入了TIME-WAIT（时间等待）状态。注意此时TCP连接还没有释放，必须经过2∗∗MSL（最长报文段寿命）的时间后，当客户端撤销相应的TCB后，才进入CLOSED状态。
6）服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。

https://blog.csdn.net/u012940886/article/details/80381398
